{
  "errors": [],
  "generated_at": "2025-05-31T00:40:19Z",
  "metrics": {
    "./extension.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 116,
      "nosec": 0,
      "skipped_tests": 0
    },
    "./run_quality_scan.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 1,
      "nosec": 0,
      "skipped_tests": 0
    },
    "_totals": {
      "CONFIDENCE.HIGH": 41,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 41,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 1690,
      "nosec": 0,
      "skipped_tests": 0
    },
    "evaluation/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 0,
      "nosec": 0,
      "skipped_tests": 0
    },
    "evaluation/evaluator.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 170,
      "nosec": 0,
      "skipped_tests": 0
    },
    "evaluation/notebook_converter.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 36,
      "nosec": 0,
      "skipped_tests": 0
    },
    "lifecycle/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 0,
      "nosec": 0,
      "skipped_tests": 0
    },
    "lifecycle/stage_manager.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 37,
      "nosec": 0,
      "skipped_tests": 0
    },
    "test_notebooks/test_example.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 3,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 23,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/.ipynb_checkpoints/gitleaks_runner-checkpoint.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 3,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 68,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/.ipynb_checkpoints/jscpd_runner-checkpoint.py": {
      "CONFIDENCE.HIGH": 5,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 5,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 164,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 0,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/assertion_counter.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 78,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/bandit_runner.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 3,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 93,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/dependency_checker.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 92,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/gitleaks_runner.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 3,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 68,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/howfairis_runner.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 3,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 43,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/jscpd_runner.py": {
      "CONFIDENCE.HIGH": 5,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 5,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 164,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/loc_counter.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 88,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/modularity_checker.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 55,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/pylint_runner.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 3,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 58,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/radon_runner.py": {
      "CONFIDENCE.HIGH": 9,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 9,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 280,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/unit_test_checker.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 56,
      "nosec": 0,
      "skipped_tests": 0
    }
  },
  "results": [
    {
      "code": "33 \n34 assert classify_number(5) == \"positive\"\n35 assert classify_number(-3) == \"negative\"\n",
      "col_offset": 0,
      "end_col_offset": 39,
      "filename": "test_notebooks/test_example.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 34,
      "line_range": [
        34
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "34 assert classify_number(5) == \"positive\"\n35 assert classify_number(-3) == \"negative\"\n36 assert classify_number(0) == \"zero\"\n",
      "col_offset": 0,
      "end_col_offset": 40,
      "filename": "test_notebooks/test_example.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 35,
      "line_range": [
        35
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "35 assert classify_number(-3) == \"negative\"\n36 assert classify_number(0) == \"zero\"\n37 \n",
      "col_offset": 0,
      "end_col_offset": 35,
      "filename": "test_notebooks/test_example.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
      "line_number": 36,
      "line_range": [
        36
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b101_assert_used.html",
      "test_id": "B101",
      "test_name": "assert_used"
    },
    {
      "code": "1 import subprocess\n2 import os\n3 import json\n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "tools/.ipynb_checkpoints/gitleaks_runner-checkpoint.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "18         # Run Gitleaks\n19         result = subprocess.run(\n20             [\"gitleaks\", \"detect\", \"--source\", root_path,\n21              \"--report-format\", \"json\", \"--report-path\", report_path],\n22             capture_output=True,\n23             text=True,\n24             check=False\n25         )\n26 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/.ipynb_checkpoints/gitleaks_runner-checkpoint.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 19,
      "line_range": [
        19,
        20,
        21,
        22,
        23,
        24,
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "18         # Run Gitleaks\n19         result = subprocess.run(\n20             [\"gitleaks\", \"detect\", \"--source\", root_path,\n21              \"--report-format\", \"json\", \"--report-path\", report_path],\n22             capture_output=True,\n23             text=True,\n24             check=False\n25         )\n26 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/.ipynb_checkpoints/gitleaks_runner-checkpoint.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 19,
      "line_range": [
        19,
        20,
        21,
        22,
        23,
        24,
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1 import os\n2 import subprocess\n3 import json\n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "tools/.ipynb_checkpoints/jscpd_runner-checkpoint.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "64         # Step 3: Run jscpd using subprocess\n65         subprocess.run(\n66             [\n67                 \"jscpd\",\n68                 \"--min-lines\", \"5\",              # Minimum lines to consider duplication\n69                 \"--reporters\", \"json\",           # Output format\n70                 \"--output\", output_dir,          # Output directory\n71                 *files_to_scan                   # File or folder to scan\n72             ],\n73             check=True,\n74             stdout=subprocess.PIPE,\n75             stderr=subprocess.PIPE,\n76             text=True\n77         )\n78 \n",
      "col_offset": 8,
      "end_col_offset": 9,
      "filename": "tools/.ipynb_checkpoints/jscpd_runner-checkpoint.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 65,
      "line_range": [
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "64         # Step 3: Run jscpd using subprocess\n65         subprocess.run(\n66             [\n67                 \"jscpd\",\n68                 \"--min-lines\", \"5\",              # Minimum lines to consider duplication\n69                 \"--reporters\", \"json\",           # Output format\n70                 \"--output\", output_dir,          # Output directory\n71                 *files_to_scan                   # File or folder to scan\n72             ],\n73             check=True,\n74             stdout=subprocess.PIPE,\n75             stderr=subprocess.PIPE,\n76             text=True\n77         )\n78 \n",
      "col_offset": 8,
      "end_col_offset": 9,
      "filename": "tools/.ipynb_checkpoints/jscpd_runner-checkpoint.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 65,
      "line_range": [
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "163         # Run Gitleaks\n164         result = subprocess.run(\n165             [\"gitleaks\", \"detect\", \"--source\", root_path,\n166              \"--report-format\", \"json\", \"--report-path\", report_path],\n167             capture_output=True,\n168             text=True,\n169             check=False\n170         )\n171 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/.ipynb_checkpoints/jscpd_runner-checkpoint.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 164,
      "line_range": [
        164,
        165,
        166,
        167,
        168,
        169,
        170
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "163         # Run Gitleaks\n164         result = subprocess.run(\n165             [\"gitleaks\", \"detect\", \"--source\", root_path,\n166              \"--report-format\", \"json\", \"--report-path\", report_path],\n167             capture_output=True,\n168             text=True,\n169             check=False\n170         )\n171 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/.ipynb_checkpoints/jscpd_runner-checkpoint.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 164,
      "line_range": [
        164,
        165,
        166,
        167,
        168,
        169,
        170
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "61         \n62         except Exception as e:\n63             # Do not block the whole analysis if one file fails \n64             continue\n65 \n",
      "col_offset": 8,
      "end_col_offset": 20,
      "filename": "tools/assertion_counter.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Continue detected.",
      "line_number": 62,
      "line_range": [
        62,
        63,
        64
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b112_try_except_continue.html",
      "test_id": "B112",
      "test_name": "try_except_continue"
    },
    {
      "code": "1 import subprocess\n2 import os\n3 import json\n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "tools/bandit_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "37     try:\n38         subprocess.run(\n39             [\"bandit\", \"-r\", *targets, \"-f\", \"json\", \"-o\", report_path],\n40             check=False,\n41             capture_output=True,\n42             text=True\n43         )\n44     except subprocess.CalledProcessError as e:\n",
      "col_offset": 8,
      "end_col_offset": 9,
      "filename": "tools/bandit_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 38,
      "line_range": [
        38,
        39,
        40,
        41,
        42,
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "37     try:\n38         subprocess.run(\n39             [\"bandit\", \"-r\", *targets, \"-f\", \"json\", \"-o\", report_path],\n40             check=False,\n41             capture_output=True,\n42             text=True\n43         )\n44     except subprocess.CalledProcessError as e:\n",
      "col_offset": 8,
      "end_col_offset": 9,
      "filename": "tools/bandit_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 38,
      "line_range": [
        38,
        39,
        40,
        41,
        42,
        43
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "44                     all_imports.update(imports)\n45                 except Exception:\n46                     continue  # Skip files that can't be read or parsed\n47     return all_imports\n",
      "col_offset": 16,
      "end_col_offset": 28,
      "filename": "tools/dependency_checker.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Continue detected.",
      "line_number": 45,
      "line_range": [
        45,
        46
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b112_try_except_continue.html",
      "test_id": "B112",
      "test_name": "try_except_continue"
    },
    {
      "code": "1 import subprocess\n2 import os\n3 import json\n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "tools/gitleaks_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "18         # Run Gitleaks\n19         result = subprocess.run(\n20             [\"gitleaks\", \"detect\", \"--source\", root_path,\n21              \"--report-format\", \"json\", \"--report-path\", report_path],\n22             capture_output=True,\n23             text=True,\n24             check=False\n25         )\n26 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/gitleaks_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 19,
      "line_range": [
        19,
        20,
        21,
        22,
        23,
        24,
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "18         # Run Gitleaks\n19         result = subprocess.run(\n20             [\"gitleaks\", \"detect\", \"--source\", root_path,\n21              \"--report-format\", \"json\", \"--report-path\", report_path],\n22             capture_output=True,\n23             text=True,\n24             check=False\n25         )\n26 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/gitleaks_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 19,
      "line_range": [
        19,
        20,
        21,
        22,
        23,
        24,
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1 import subprocess\n2 import re \n3 \n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "tools/howfairis_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "28         # Run howfairis\n29         result = subprocess.run(\n30             [\"howfairis\", github_url],\n31             capture_output=True,\n32             text=True,\n33             timeout=20\n34         )\n35 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/howfairis_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 29,
      "line_range": [
        29,
        30,
        31,
        32,
        33,
        34
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "28         # Run howfairis\n29         result = subprocess.run(\n30             [\"howfairis\", github_url],\n31             capture_output=True,\n32             text=True,\n33             timeout=20\n34         )\n35 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/howfairis_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 29,
      "line_range": [
        29,
        30,
        31,
        32,
        33,
        34
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1 import os\n2 import subprocess\n3 import json\n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "tools/jscpd_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "64         # Step 3: Run jscpd using subprocess\n65         subprocess.run(\n66             [\n67                 \"jscpd\",\n68                 \"--min-lines\", \"5\",              # Minimum lines to consider duplication\n69                 \"--reporters\", \"json\",           # Output format\n70                 \"--output\", output_dir,          # Output directory\n71                 *files_to_scan                   # File or folder to scan\n72             ],\n73             check=True,\n74             stdout=subprocess.PIPE,\n75             stderr=subprocess.PIPE,\n76             text=True\n77         )\n78 \n",
      "col_offset": 8,
      "end_col_offset": 9,
      "filename": "tools/jscpd_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 65,
      "line_range": [
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "64         # Step 3: Run jscpd using subprocess\n65         subprocess.run(\n66             [\n67                 \"jscpd\",\n68                 \"--min-lines\", \"5\",              # Minimum lines to consider duplication\n69                 \"--reporters\", \"json\",           # Output format\n70                 \"--output\", output_dir,          # Output directory\n71                 *files_to_scan                   # File or folder to scan\n72             ],\n73             check=True,\n74             stdout=subprocess.PIPE,\n75             stderr=subprocess.PIPE,\n76             text=True\n77         )\n78 \n",
      "col_offset": 8,
      "end_col_offset": 9,
      "filename": "tools/jscpd_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 65,
      "line_range": [
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        73,
        74,
        75,
        76,
        77
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "163         # Run Gitleaks\n164         result = subprocess.run(\n165             [\"gitleaks\", \"detect\", \"--source\", root_path,\n166              \"--report-format\", \"json\", \"--report-path\", report_path],\n167             capture_output=True,\n168             text=True,\n169             check=False\n170         )\n171 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/jscpd_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 164,
      "line_range": [
        164,
        165,
        166,
        167,
        168,
        169,
        170
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "163         # Run Gitleaks\n164         result = subprocess.run(\n165             [\"gitleaks\", \"detect\", \"--source\", root_path,\n166              \"--report-format\", \"json\", \"--report-path\", report_path],\n167             capture_output=True,\n168             text=True,\n169             check=False\n170         )\n171 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/jscpd_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 164,
      "line_range": [
        164,
        165,
        166,
        167,
        168,
        169,
        170
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "31                         total_loc += file_loc\n32                 except Exception:\n33                     continue  # Skip unreadable files\n34         \n",
      "col_offset": 16,
      "end_col_offset": 28,
      "filename": "tools/loc_counter.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Continue detected.",
      "line_number": 32,
      "line_range": [
        32,
        33
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b112_try_except_continue.html",
      "test_id": "B112",
      "test_name": "try_except_continue"
    },
    {
      "code": "32                 func_counts[file.name] = sum(isinstance(n, ast.FunctionDef) for n in ast.walk(node))\n33         except Exception:\n34             continue\n35 \n",
      "col_offset": 8,
      "end_col_offset": 20,
      "filename": "tools/modularity_checker.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Continue detected.",
      "line_number": 33,
      "line_range": [
        33,
        34
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b112_try_except_continue.html",
      "test_id": "B112",
      "test_name": "try_except_continue"
    },
    {
      "code": "1 import subprocess  \n2 import os  \n3 \n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "tools/pylint_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "24     try:\n25         output = subprocess.check_output(\n26             ['pylint', filepath, '-f', 'text', '--disable=all', '--enable=C,R,W'],\n27             stderr=subprocess.STDOUT,\n28             text=True\n29         )\n30 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/pylint_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 25,
      "line_range": [
        25,
        26,
        27,
        28,
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "24     try:\n25         output = subprocess.check_output(\n26             ['pylint', filepath, '-f', 'text', '--disable=all', '--enable=C,R,W'],\n27             stderr=subprocess.STDOUT,\n28             text=True\n29         )\n30 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/pylint_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 25,
      "line_range": [
        25,
        26,
        27,
        28,
        29
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1 import subprocess  # Used to run external system commands (like calling radon)\n2 import json        # Used to parse the JSON output returned by radon\n3 import os          # Used to check if the target file exists\n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "34         # '--json' makes sure we get structured output that we can parse\n35         output = subprocess.check_output(\n36             ['radon', 'mi', '--json', filepath],  # CLI command: radon mi --json target.py\n37             stderr=subprocess.STDOUT,             # Capture any errors in output too\n38             text=True                             # Return output as a string, not bytes\n39         )\n40 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 35,
      "line_range": [
        35,
        36,
        37,
        38,
        39
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "34         # '--json' makes sure we get structured output that we can parse\n35         output = subprocess.check_output(\n36             ['radon', 'mi', '--json', filepath],  # CLI command: radon mi --json target.py\n37             stderr=subprocess.STDOUT,             # Capture any errors in output too\n38             text=True                             # Return output as a string, not bytes\n39         )\n40 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 35,
      "line_range": [
        35,
        36,
        37,
        38,
        39
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "143         # Step 2: Run the radon complexity (cc) command in JSON mode\n144         output = subprocess.check_output(\n145             ['radon', 'cc', '--json', '--no-assert', filepath], # radon cc = complexity check\n146             stderr=subprocess.STDOUT, # Redirect any error output into the same stream\n147             text=True # Ensure the result is returned as a string (not bytes)\n148         )\n149 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 144,
      "line_range": [
        144,
        145,
        146,
        147,
        148
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "143         # Step 2: Run the radon complexity (cc) command in JSON mode\n144         output = subprocess.check_output(\n145             ['radon', 'cc', '--json', '--no-assert', filepath], # radon cc = complexity check\n146             stderr=subprocess.STDOUT, # Redirect any error output into the same stream\n147             text=True # Ensure the result is returned as a string (not bytes)\n148         )\n149 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 144,
      "line_range": [
        144,
        145,
        146,
        147,
        148
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "209         # Run Radon as a subprocess to get cyclomatic complexity in JSON format\n210         output = subprocess.check_output(\n211             ['radon', 'cc', '--json', '--no-assert', filepath],\n212             stderr=subprocess.STDOUT,\n213             text=True\n214         )\n215         results = json.loads(output)\n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 210,
      "line_range": [
        210,
        211,
        212,
        213,
        214
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "209         # Run Radon as a subprocess to get cyclomatic complexity in JSON format\n210         output = subprocess.check_output(\n211             ['radon', 'cc', '--json', '--no-assert', filepath],\n212             stderr=subprocess.STDOUT,\n213             text=True\n214         )\n215         results = json.loads(output)\n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 210,
      "line_range": [
        210,
        211,
        212,
        213,
        214
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "316         # Step 2: Run radon raw analysis with --json output\n317         output = subprocess.check_output(\n318             ['radon', 'raw', '--json', filepath],\n319             stderr=subprocess.STDOUT,\n320             text=True\n321         )\n322 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 317,
      "line_range": [
        317,
        318,
        319,
        320,
        321
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "316         # Step 2: Run radon raw analysis with --json output\n317         output = subprocess.check_output(\n318             ['radon', 'raw', '--json', filepath],\n319             stderr=subprocess.STDOUT,\n320             text=True\n321         )\n322 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 317,
      "line_range": [
        317,
        318,
        319,
        320,
        321
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    }
  ]
}