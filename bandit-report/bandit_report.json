{
  "errors": [],
  "generated_at": "2025-05-16T22:28:00Z",
  "metrics": {
    "./extension.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 91,
      "nosec": 0,
      "skipped_tests": 0
    },
    "_totals": {
      "CONFIDENCE.HIGH": 23,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 23,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 805,
      "nosec": 0,
      "skipped_tests": 0
    },
    "config/metric_stage_map.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 0,
      "nosec": 0,
      "skipped_tests": 0
    },
    "evaluation/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 0,
      "nosec": 0,
      "skipped_tests": 0
    },
    "evaluation/evaluator.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 101,
      "nosec": 0,
      "skipped_tests": 0
    },
    "evaluation/notebook_parser.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 0,
      "nosec": 0,
      "skipped_tests": 0
    },
    "lifecycle/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 0,
      "nosec": 0,
      "skipped_tests": 0
    },
    "lifecycle/stage_manager.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 37,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 0,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/assertion_counter.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 54,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/bandit_runner.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 3,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 66,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/gitleaks_runner.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 3,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 53,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/howfairis_runner.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 3,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 27,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/jscpd_runner.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 3,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 65,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/loc_counter.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 1,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 61,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/pylint_runner.py": {
      "CONFIDENCE.HIGH": 3,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 3,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 40,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/radon_runner.py": {
      "CONFIDENCE.HIGH": 7,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 7,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 154,
      "nosec": 0,
      "skipped_tests": 0
    },
    "tools/unit_test_checker.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 56,
      "nosec": 0,
      "skipped_tests": 0
    }
  },
  "results": [
    {
      "code": "1 import subprocess\n2 import os\n3 import json\n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "tools/bandit_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "51     try:\n52         subprocess.run(\n53             [\"bandit\", \"-r\", *targets, \"-f\", \"json\", \"-o\", report_path],\n54             check=False,\n55             capture_output=True,\n56             text=True\n57         )\n58     except subprocess.CalledProcessError as e:\n",
      "col_offset": 8,
      "end_col_offset": 9,
      "filename": "tools/bandit_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 52,
      "line_range": [
        52,
        53,
        54,
        55,
        56,
        57
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "51     try:\n52         subprocess.run(\n53             [\"bandit\", \"-r\", *targets, \"-f\", \"json\", \"-o\", report_path],\n54             check=False,\n55             capture_output=True,\n56             text=True\n57         )\n58     except subprocess.CalledProcessError as e:\n",
      "col_offset": 8,
      "end_col_offset": 9,
      "filename": "tools/bandit_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 52,
      "line_range": [
        52,
        53,
        54,
        55,
        56,
        57
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1 import subprocess\n2 import os\n3 import json\n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "tools/gitleaks_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "18         # Run Gitleaks\n19         result = subprocess.run(\n20             [\"gitleaks\", \"detect\", \"--source\", root_path,\n21              \"--report-format\", \"json\", \"--report-path\", report_path],\n22             capture_output=True,\n23             text=True,\n24             check=False\n25         )\n26 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/gitleaks_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 19,
      "line_range": [
        19,
        20,
        21,
        22,
        23,
        24,
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "18         # Run Gitleaks\n19         result = subprocess.run(\n20             [\"gitleaks\", \"detect\", \"--source\", root_path,\n21              \"--report-format\", \"json\", \"--report-path\", report_path],\n22             capture_output=True,\n23             text=True,\n24             check=False\n25         )\n26 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/gitleaks_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 19,
      "line_range": [
        19,
        20,
        21,
        22,
        23,
        24,
        25
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1 import subprocess\n2 \n3 def run_howfairis_license_check(github_url):\n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "tools/howfairis_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "10         # Run howfairis as subprocess and capture all output\n11         result = subprocess.run(\n12             [\"howfairis\", github_url],\n13             capture_output=True,\n14             text=True,\n15             timeout=20\n16         )\n17 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/howfairis_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 11,
      "line_range": [
        11,
        12,
        13,
        14,
        15,
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "10         # Run howfairis as subprocess and capture all output\n11         result = subprocess.run(\n12             [\"howfairis\", github_url],\n13             capture_output=True,\n14             text=True,\n15             timeout=20\n16         )\n17 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/howfairis_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 11,
      "line_range": [
        11,
        12,
        13,
        14,
        15,
        16
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1 import os\n2 import subprocess\n3 import json\n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "tools/jscpd_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 2,
      "line_range": [
        2
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "36         # Step 3: Run jscpd using subprocess\n37         subprocess.run(\n38             [\n39                 \"jscpd\",\n40                 \"--min-lines\", \"5\",              # Minimum lines to consider duplication\n41                 \"--reporters\", \"json\",           # Output format\n42                 \"--output\", output_dir,          # Output directory\n43                 path                             # File or folder to scan\n44             ],\n45             check=True,\n46             stdout=subprocess.PIPE,\n47             stderr=subprocess.PIPE,\n48             text=True\n49         )\n50 \n",
      "col_offset": 8,
      "end_col_offset": 9,
      "filename": "tools/jscpd_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 37,
      "line_range": [
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "36         # Step 3: Run jscpd using subprocess\n37         subprocess.run(\n38             [\n39                 \"jscpd\",\n40                 \"--min-lines\", \"5\",              # Minimum lines to consider duplication\n41                 \"--reporters\", \"json\",           # Output format\n42                 \"--output\", output_dir,          # Output directory\n43                 path                             # File or folder to scan\n44             ],\n45             check=True,\n46             stdout=subprocess.PIPE,\n47             stderr=subprocess.PIPE,\n48             text=True\n49         )\n50 \n",
      "col_offset": 8,
      "end_col_offset": 9,
      "filename": "tools/jscpd_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 37,
      "line_range": [
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "33                     total_loc += file_loc\n34             except Exception:\n35                     # Skip unreadable files\n36                     continue\n37     return {\n",
      "col_offset": 12,
      "end_col_offset": 28,
      "filename": "tools/loc_counter.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Continue detected.",
      "line_number": 34,
      "line_range": [
        34,
        35,
        36
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b112_try_except_continue.html",
      "test_id": "B112",
      "test_name": "try_except_continue"
    },
    {
      "code": "1 import subprocess  \n2 import os  \n3 \n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "tools/pylint_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "26         # STEP 2: Run pylint on the file using subprocess\n27         output = subprocess.check_output(\n28             ['pylint', filepath],          # Command to run pylint on the file\n29             stderr=subprocess.STDOUT,      # Redirect standard error to standard output\n30             text=True                      # Return output as a string instead of bytes\n31         )\n32 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/pylint_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 27,
      "line_range": [
        27,
        28,
        29,
        30,
        31
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "26         # STEP 2: Run pylint on the file using subprocess\n27         output = subprocess.check_output(\n28             ['pylint', filepath],          # Command to run pylint on the file\n29             stderr=subprocess.STDOUT,      # Redirect standard error to standard output\n30             text=True                      # Return output as a string instead of bytes\n31         )\n32 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/pylint_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 27,
      "line_range": [
        27,
        28,
        29,
        30,
        31
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "1 import subprocess  # Used to run external system commands (like calling radon)\n2 import json        # Used to parse the JSON output returned by radon\n3 import os          # Used to check if the target file exists\n",
      "col_offset": 0,
      "end_col_offset": 17,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Consider possible security implications associated with the subprocess module.",
      "line_number": 1,
      "line_range": [
        1
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/blacklists/blacklist_imports.html#b404-import-subprocess",
      "test_id": "B404",
      "test_name": "blacklist"
    },
    {
      "code": "34         # '--json' makes sure we get structured output that we can parse\n35         output = subprocess.check_output(\n36             ['radon', 'mi', '--json', filepath],  # CLI command: radon mi --json target.py\n37             stderr=subprocess.STDOUT,             # Capture any errors in output too\n38             text=True                             # Return output as a string, not bytes\n39         )\n40 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 35,
      "line_range": [
        35,
        36,
        37,
        38,
        39
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "34         # '--json' makes sure we get structured output that we can parse\n35         output = subprocess.check_output(\n36             ['radon', 'mi', '--json', filepath],  # CLI command: radon mi --json target.py\n37             stderr=subprocess.STDOUT,             # Capture any errors in output too\n38             text=True                             # Return output as a string, not bytes\n39         )\n40 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 35,
      "line_range": [
        35,
        36,
        37,
        38,
        39
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "106         # Step 2: Run the radon complexity (cc) command in JSON mode\n107         output = subprocess.check_output(\n108             ['radon', 'cc', '--json', '--no-assert', filepath], # radon cc = complexity check\n109             stderr=subprocess.STDOUT, # Redirect any error output into the same stream\n110             text=True # Ensure the result is returned as a string (not bytes)\n111         )\n112 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 107,
      "line_range": [
        107,
        108,
        109,
        110,
        111
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "106         # Step 2: Run the radon complexity (cc) command in JSON mode\n107         output = subprocess.check_output(\n108             ['radon', 'cc', '--json', '--no-assert', filepath], # radon cc = complexity check\n109             stderr=subprocess.STDOUT, # Redirect any error output into the same stream\n110             text=True # Ensure the result is returned as a string (not bytes)\n111         )\n112 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 107,
      "line_range": [
        107,
        108,
        109,
        110,
        111
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    },
    {
      "code": "183         # Step 2: Run radon raw analysis with --json output\n184         output = subprocess.check_output(\n185             ['radon', 'raw', '--json', filepath],\n186             stderr=subprocess.STDOUT,\n187             text=True\n188         )\n189 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Starting a process with a partial executable path",
      "line_number": 184,
      "line_range": [
        184,
        185,
        186,
        187,
        188
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b607_start_process_with_partial_path.html",
      "test_id": "B607",
      "test_name": "start_process_with_partial_path"
    },
    {
      "code": "183         # Step 2: Run radon raw analysis with --json output\n184         output = subprocess.check_output(\n185             ['radon', 'raw', '--json', filepath],\n186             stderr=subprocess.STDOUT,\n187             text=True\n188         )\n189 \n",
      "col_offset": 17,
      "end_col_offset": 9,
      "filename": "tools/radon_runner.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 78,
        "link": "https://cwe.mitre.org/data/definitions/78.html"
      },
      "issue_severity": "LOW",
      "issue_text": "subprocess call - check for execution of untrusted input.",
      "line_number": 184,
      "line_range": [
        184,
        185,
        186,
        187,
        188
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.3/plugins/b603_subprocess_without_shell_equals_true.html",
      "test_id": "B603",
      "test_name": "subprocess_without_shell_equals_true"
    }
  ]
}