import os
import json 
import matplotlib.pyplot as plt
import seaborn as sns
import re 

# -------- Configuration --------
# Path to the JSON file generated by run_development_evaluation.py
json_path = "/Users/yt/Documents/folder2024/course/Thesis/11_envri_validation_set_results/batch_development_results.json"

# Load the results from the JSON file
with open(json_path, "r", encoding="utf-8") as f:
    batch_data = json.load(f)

# -------- Storage for metrics --------
dependency_pass = 0
dependency_fail = 0
loc_list = []
duplication_pct = []
assertion_pct = []
mi_scores = []
cc_scores = []
cc_ranks = []
comment_density = []
code_smell_scores = []

# -------- Helper: Extract pylint score --------
def extract_pylint_score(message):
    """Returns score as float if message contains 'rated at .../10'."""
    match = re.search(r"rated at ([\d\.]+)/10", message)
    return float(match.group(1)) if match else None

# -------- Main Parsing Loop --------
for project, results in batch_data.items():
    for section_name, section_data in results.items():
        # Project-level metrics
        if section_name == "Project-Level Results":
            for metric, detail in section_data.items():
                msg = detail.get("message", "")
                if metric == "Dependency Management":
                    if detail["status"] == "pass":
                        dependency_pass += 1
                    else:
                        dependency_fail += 1
                elif metric == "Software Size (LoC)":
